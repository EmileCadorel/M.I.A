mod main;
import std::io;
import std::lexer;
import std::args, std::fs::_, std::conv;
import mia::syntax::visitor;

struct
| input : [c32] = "."
| resources : [c32] = "./resources/eo/"
| help : YesNo
 -> Arguments;

def console (dmut miaParser : &SyntaxVisitor) {
    loop {
        let line = read![c32] (ask-> "> ");
        {
            miaParser.visitSentence (line);
        } catch {
            x : _ => println (x);
        }
    }
}



def main (args : [[c8]]) {
    let dmut argParser = ArgumentParser!{Arguments}::new ()
        :.info!"help" (short-> "h", comments-> "print this help and exit", isHelp-> true)
        :.info!"input" (short-> "i", comments-> "input file")
        :.info!"resources" (short-> "r", comments-> "resource directory");

    {
        let a = argParser.parse (args);
        let dmut mia_syntax = SyntaxVisitor::new (resource-> Path::new (a.resources));
        console (alias mia_syntax);
    } catch {
        err : &ArgumentError => {
            println (argParser.simpleUsage (cmd-> "MIA"));
            println (argParser.diagnosis (err));
        }
        _ : &HelpRequired => {
            println (argParser.usage (cmd-> "MIA"));
        }
        x : _ => {
            println (x);
        }
    }

    
}
