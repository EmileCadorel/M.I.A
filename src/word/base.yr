mod word::base;

import std::io;


/**
 * A word is a part of a phrase
 * It is the ancestor of al kind of word, a word does not have a role
 * To give a role to word, we need to associate it to a phrase
 * (Word roles are subject, accusative, temporal, etc..)
 * @example: 
 * ==============
 * import parser::_;
 * 
 * let w = ("manĝi").to!(&Word) ();
 * match w {
 *    v : &Verb => {
 *        println ("V is a verb, whose radical is : ", v.getRadical ());
 *    }
 * }
 * ==============
 */
pub class @abstract Word {

    let _radical : [c32]; 

    /**
     * The radical of the word, in esperanto, this should be the simplest part of the word that can be transformed in any kind of word by just adding some suffix
     * For example: manĝ, pom, blu, ruĝ, ...
     */
    pub self (radical : [c32])
        with _radical = radical
    {}    

    /**
     * @returns: the radical parts of the the word
     */
    pub def @final getRadical (self)-> [c32] {
        self._radical
    }

    impl Printable;
    
}
